/**
 * Copyright 2022 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
// Top-level build file where you can add configuration options common to all sub-projects/modules.
import com.hierynomus.gradle.license.tasks.LicenseFormat

buildscript {
    ext {
        kotlin_version = '1.4.0'
    }
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20"
    }
}


plugins {
    id 'com.github.hierynomus.license' version '0.16.1' apply true
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    apply plugin: 'maven-publish'
    if (project.hasProperty("sonatypeUser") && project.hasProperty("sonatypePass")) {
        ext["ossrhUsername"] = "$sonatypeUser"
        ext["ossrhPassword"] = "$sonatypePass"
    } else {
        ext["ossrhUsername"] = ""
        ext["ossrhPassword"] = ""
    }
}

license {
    header rootProject.file('../config/formatter/header.txt')
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    skipExistingHeaders = true
}

// Add and maintain licence header to all project files of type XML, YAML, Properties, and Gradle
task licenseFormatProject(type: LicenseFormat) {
    source = fileTree(dir: "../")
            .exclude(["**/.idea/*", "**/build/*", "**/*.java", "**/*.kt", "**/.git/*", "**/.gradle/*", "**/gradle/wrapper/*", "config/*", "**/local.properties"])
            .include(["**/*.xml", "**/*.yml", "**/*.properties", "**/*.gradle"])
}
licenseFormat.dependsOn licenseFormatProject

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    // android config
    minSdkVersion = 19
    targetSdkVersion = 33
    compileSdkVersion = 33
    versionCode = 2

    // java config
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    // dependencies
    junitVersion = "1.1.3"
    mockitoCoreVersion = "4.5.1"
    testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    jacocoVersion = "0.8.7"
}